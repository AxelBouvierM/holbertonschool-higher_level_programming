"""Divide a matrix"""

"""Test function 1 Divide a matrix"""

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix_divided([[3, 6, 10, 20], [4, 8, 40, 60]], 2)
[[1.5, 3.0, 5.0, 10.0], [2.0, 4.0, 20.0, 30.0]]

>>> matrix_divided([[None], [2, 3]], 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[2, 4, 5], [None]], 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[None], [None]], 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[3, 6, 10, 20], [4, 8, 40, 60]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix_divided([[3, 6, 10, 20], [4, 8, 40, 60]], -2)
[[-1.5, -3.0, -5.0, -10.0], [-2.0, -4.0, -20.0, -30.0]]

>>> matrix_divided([[2, 4, 5], ["Hello"]], 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[3, 6, 10, 20], [4, 8, 40, 60, 23]], 2)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[3, 6, 10, 20, 30], [4, 8, 40, 60]], 2)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[3, 6, 10, 20, 30], []], 2)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[], [3, 6, 10, 20, 30]], 2)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided("Hello", 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(["Hello"], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
